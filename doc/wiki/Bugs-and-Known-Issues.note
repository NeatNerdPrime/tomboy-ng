<?xml version="1.0" encoding="utf-8"?>
<note version="0.3" xmlns:link="http://beatniksoftware.com/tomboy/link" xmlns:size="http://beatniksoftware.com/tomboy/size" xmlns="http://beatniksoftware.com/tomboy">
  <title>tomboy-ng Bugs and Known Issues</title>
  
<text xml:space="preserve"><note-content version="0.1"><underline>tomboy-ng Bugs and Known Issues</underline>

<size:small>This is the tomboy-ng Known Issues and To-Do list for Github Wiki.  Its generated from a note in the tomboy-ng doc dir, don't edit the wiki directly.</size:small>

<size:huge><bold>Bugs</bold></size:huge>
Bug reports and feature requests should be via Github https://github.com/tomboy-notes/tomboy-ng/issues
There is some advice about DIY debugging further down this document.


<size:huge><bold>Known Issues</bold></size:huge>

<list><list-item dir="ltr">On some  Macs, when using the in note Find tool, a 'shadow highlight' can appear superimposed over the button bar. It does no harm, disappears when you move the mouse over the button but is unsightly. Its a know upstream problem, https://forum.lazarus.freepascal.org/index.php/topic,53055.0.html .</list-item></list>
<list><list-item dir="ltr">Do not set your notes directory to be on a network share.  Please keep your notes on a local disk and use the sync facility to share them with other machines (or even the same multiboot machine).</list-item></list>


<size:huge><bold>Specific Things with a Work Around</bold></size:huge>

<size:large><bold>QT5 versions and Dark Theme</bold></size:large>
On a number of Linux Distros, the QT5 version does not pick up the Dark Theme from the operating system. You can pass the executable a --dark-theme switch but much better to install qt5ct and set what colours you like. You will need to set an environment variable that tells Qt apps (including qt5ct itself) that you are using qt5ct colours, either by adding an environment variable when you start tomboy-ng  -

<monospace>QT_QPA_PLATFORMTHEME=qt5ct tomboy-ng [enter]</monospace>

Or you could set that generally so it makes all QT apps look the same by, eg, adding this to your  /etc/environment file (and logging out and back in again) -

<monospace>QT_QPA_PLATFORMTHEME=qt5ct</monospace>

<size:large><bold>Dark Theme</bold></size:large>
At present, seems only GTK2 can pick up its colours from the OS :-(
So, its now possible to pass --dark-theme to the application on the command line and you get, sort of, a Dark Theme.  Sadly, some forms in the application are based on components that simply will not play, Settings being a good example. Sorry.

<size:large><bold>QT5 versions and Gnome Desktops</bold></size:large>
Almost all Gnome Desktops now use the Wayland Display Manager instead of X (or XCB). QT5 has a plugin that will manage the connection between a QT5 app and Wayland, typically called qtwayland5, you may find it already installed or need to manually install it yourself.  If you run a QT5 app, such as the QT5 version of tomboy-ng, you may see a warning to the effect that its ignoring the request to run under Wayland, if you want it to run under Wayland, do something like -

QT_QPA_PLATFORM=wayland  tomboy-ng [enter]

You can do so (if you have qtwayland5 installed) but it seems to make little or no difference and does trigger a couple of warning messages from the QT libraries. So, honestly, don't worry about it.

<size:large><bold>Calc separator</bold></size:large>
In the calculator, many countries use the comma instead of a period as a decimal separator. Turns out this could be quite a challenge, my apologies to people from locales where this is an issue. https://forum.lazarus.freepascal.org/index.php/topic,56305.msg418384.html#msg418384

<size:large><bold>System Tray Issues</bold></size:large>
Please see https://github.com/tomboy-notes/tomboy-ng/wiki/System-Tray-on-Linux


<size:huge><bold>Long term 'maybe' stuff</bold></size:huge>
These are things I have no immediate plans to fix, but they might be addressed some time in the future if there is some demand from end users.
<list><list-item dir="ltr">On Linux GTK2 based versions, using the Compose Key approach to entering accented characters results in a bad character also being inserted. This is a known, upstream issue,  https://bugs.freepascal.org/view.php?id=38454 . Qt5 versions do not have this problem.</list-item></list>
<list><list-item dir="ltr">Stop house keeping from moving viewport.</list-item></list>
<list><list-item dir="ltr">Restoring cursor position on note load.</list-item></list>
<list><list-item dir="ltr">Dark theme is less than perfect on Windows and unknown on Mac.  Windows will not let us set a dark background to buttons, must look at owner draw modes.</list-item></list>
<list><list-item dir="ltr">Lines starting with an '*' should be auto converted to a Bullet.</list-item></list>
<list><list-item dir="ltr">Tabs do not work.</list-item></list>
<list><list-item dir="ltr">Revise controls, at present modelled on Tomboy, we can improve.</list-item></list>



<size:huge><bold>Debugging</bold></size:huge>
If you have problems with the application, or wish to make a feature request, please report via the github tomboy-ng issues facility.
If tomboy-ng crashes or does something unexpected, there are a number of command line switches that may reveal whats going on (to either yourself of, if posted to 'issues', the author).  Using these command line switches is easy in Linux but Windows or Mac users need to capture the information in a file, see below -

<bold>Command Line Switches</bold>

   <list><list-item dir="ltr"><monospace>--dark-theme</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>-l --lang=CCode               Force Language, en, es, uk, fr, nl</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>-h --help                     Show this help message and exit.</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--version                     Print version and exit</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--no-splash                   Do not show small status/splash window</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--debug-sync                  Show debug messages during Sync</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--debug-index                 Show debug msgs while indexing notes</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--debug-spell                 Show debug messages while spell setup</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--config-dir=PATH_to_DIR      Create or use an alternative config</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--open-note=PATH_to_NOTE      Open indicated note, switch is optional</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--debug-log=SOME.LOG          Direct debug output to SOME.LOG.</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--import-txt=PATH_to_FILE     Import file into Note Repo  also -t</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--import-md=PATH_to_FILE      Import file into Note Repo  also -m</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--import-note=PATH_to_NOTE    Import file into Note Repo  also -n</monospace></list-item></list>
   <list><list-item dir="ltr"><monospace>--title-fname                 Use Filename as title for import txt &amp; md</monospace></list-item></list>

<bold>Capturing to a file</bold>
Windows and Mac do not, for this purpose, have a console. But they too  can be told to capture this log info to a file using  another  command  line  switch or by setting an env variable that specifies a file name. Please ensure you have permission to write to the location specified. For example a linux user would  -

       set tomboy-ng_debuglog=c:\%userprofile%\debug.txt

<bold>Mac</bold> users can do something similar from a terminal :

       open /Applications/tomboy-ng.app --args     "--debug-log=$HOME/tomboy-ng.log"  "--debug-sync"

       Linux users who need a debug log file can also :

       tomboy-ng --debug-sync --debug-log=$HOME/tomboy-ng.log

<bold>Windows</bold> users should do something like this -

<list><list-item dir="ltr">Right click the startbutton and select "run".  In the field, enter this command line exactly as show (including the inverted commas) -</list-item></list>
<list><list-item dir="ltr">"C:\Program Files\tomboy-ng\tomboy-ng.exe" --debug-index --debug-log=%userprofile%\Desktop\tomboy-log.txt</list-item></list>
<list><list-item dir="ltr">Press enter, tomboy-ng should start up normally. Close it.</list-item></list>
<list><list-item dir="ltr">A file called tomboy-log.txt will have been created on your desktop.</list-item></list>

In all cases, you may need to zip that file up to post it on Github. If  you  do intend to post such a log file to (eg) the Tomboy help system, do please check through it first to ensure there is nothing there you don't want the world to see. It may include things like note Titles for example. Note that a debug file will capture very little data unless of the debug switches is also set.




</note-content></text>
  <last-change-date>2022-10-19T21:20:52.1695722+11:00</last-change-date>
  <last-metadata-change-date>2022-10-19T21:20:52.1695722+11:00</last-metadata-change-date>
  <create-date>2018-06-23T12:35:30.7960000+10:00</create-date>
  <cursor-position>1</cursor-position>
  <selection-bound-position>1</selection-bound-position>
  <width>1211</width>
  <height>626</height>
  <x>317</x>
  <y>153</y>
  <open-on-startup>False</open-on-startup>
</note>
